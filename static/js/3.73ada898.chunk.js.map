{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","s","dialog","active","to","name","Message","message","text","maxLength100","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","requiredField","placeholder","Dialogs","state","dialogsPage","dialogsElement","dialogs","map","d","messageElement","messages","el","newMessageBody","isAuth","dialogItems","value","sendMessage","compose","connect","dispatch","sendMessageCreator","withAuthRedirect"],"mappings":"2HACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,SAAW,0BAA0B,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,0B,kFCYrMC,EATI,SAACC,GAClB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACE,qBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,OAAnC,SACE,cAAC,IAAD,CAASC,GAAIN,EAAb,SAAoBD,EAAMQ,UCDjBC,EAJC,SAACT,GACf,OAAO,qBAAKG,UAAWC,IAAEM,QAAlB,SAA4BV,EAAMW,Q,kDCmDrCC,EAAeC,YAAiB,KAyBhCC,EAAsBC,YAAU,CAAEC,KAAM,wBAAlBD,EAxBL,SAACf,GACtB,OACE,uBAAMiB,SAAUjB,EAAMkB,aAAtB,UACE,8BACE,cAACC,EAAA,EAAD,CACEC,UAAWC,IACXC,SAAU,CAACC,IAAeX,GAC1BJ,KAAK,iBACLgB,YAAY,yBAShB,8BACE,kDAUOC,EAnEC,SAACzB,GACf,IAAI0B,EAAQ1B,EAAM2B,YACdC,EAAiBF,EAAMG,QAAQC,KAAI,SAACC,GAAD,OACrC,cAAC,EAAD,CAAYvB,KAAMuB,EAAEvB,KAAMN,GAAI6B,EAAE7B,IAAS6B,EAAE7B,OAGzC8B,EAAiBN,EAAMO,SAASH,KAAI,SAACI,GAAD,OACtC,cAAC,EAAD,CAASvB,KAAMuB,EAAGxB,SAAcwB,EAAGhC,OAGhBwB,EAAMS,eAc3B,OAAKnC,EAAMoC,OAKT,sBAAKjC,UAAWC,IAAEyB,QAAlB,UACE,qBAAK1B,UAAWC,IAAEiC,YAAlB,SAAgCT,IAChC,sBAAKzB,UAAWC,IAAE6B,SAAlB,UACE,8BAAMD,IACN,cAAClB,EAAD,CAAqBG,SAdP,SAACqB,GACnBtC,EAAMuC,YAAYD,EAAMH,yBAKjB,cAAC,IAAD,CAAU5B,GAAE,Y,uBCsBRiC,sBACbC,aA5BoB,SAACf,GACrB,MAAO,CACLC,YAAaD,EAAMC,gBAGE,SAACe,GACxB,MAAO,CACLH,YAAa,SAACJ,GACZO,EAASC,YAAmBR,SAqBhCS,IAFaJ,CAGbf","file":"static/js/3.73ada898.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2ApP8\",\"messages\":\"Dialogs_messages__1-xWE\",\"message\":\"Dialogs_message__2yeGr\",\"dialogsItems\":\"Dialogs_dialogsItems__3X7mg\",\"active\":\"Dialogs_active__2mkL-\",\"dialog\":\"Dialogs_dialog__3Sl7h\"};","import React from \"react\";\r\nimport s from \"./../Dialogs.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n  let path = \"/dialogs/\" + props.id;\r\n  return (\r\n    <div className={s.dialog + \" \" + s.active}>\r\n      <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DialogItem;\r\n","import React from \"react\";\r\nimport s from \"./../Dialogs.module.css\";\r\n\r\nconst Message = (props) => {\r\n  return <div className={s.message}>{props.text}</div>;\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\n\r\nimport s from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport { reduxForm, Field } from \"redux-form\";\r\nimport {\r\n  sendMessageCreator,\r\n  updNewMessageBodyCreator,\r\n} from \"../../redux/dialogsReducer\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport {\r\n  maxLengthCreator,\r\n  requiredField,\r\n} from \"../../utils/validators/validators\";\r\nimport { Textarea } from \"../common/FormsControls/FormsControl\";\r\n\r\nconst Dialogs = (props) => {\r\n  let state = props.dialogsPage;\r\n  let dialogsElement = state.dialogs.map((d) => (\r\n    <DialogItem name={d.name} id={d.id} key={d.id} />\r\n  ));\r\n\r\n  let messageElement = state.messages.map((el) => (\r\n    <Message text={el.message} key={el.id} />\r\n  ));\r\n\r\n  let newMessageBody = state.newMessageBody;\r\n\r\n  // let onSendMessageClick = () => {\r\n  //   props.sendMessage();\r\n  // };\r\n  // let onNewMessageSend = (e) => {\r\n  //   let body = e.target.value;\r\n  //   props.updNewMessageBody(body);\r\n  // };\r\n  let addNewMessage = (value) => {\r\n    props.sendMessage(value.newMessageBody);\r\n  };\r\n  // console.log(messageElement);\r\n\r\n  if (!props.isAuth) {\r\n    return <Redirect to={`/login`} />;\r\n  }\r\n\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogItems}>{dialogsElement}</div>\r\n      <div className={s.messages}>\r\n        <div>{messageElement}</div>\r\n        <AddMessageFormRedux onSubmit={addNewMessage} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nconst maxLength100 = maxLengthCreator(100);\r\nconst AddMessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          component={Textarea}\r\n          validate={[requiredField, maxLength100]}\r\n          name=\"newMessageBody\"\r\n          placeholder=\"Enter your message\"\r\n        />\r\n        {/* <Field\r\n          value={newMessageBody}\r\n          onChange={onNewMessageSend}\r\n          placeholder=\"Enter your message\"\r\n          component=\"textarea\"\r\n        ></Field> */}\r\n      </div>\r\n      <div>\r\n        <button>Send</button>\r\n        {/* <button onClick={onSendMessageClick}>Send</button> */}\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\nconst AddMessageFormRedux = reduxForm({ form: \"dialogAddMessageForm\" })(\r\n  AddMessageForm\r\n);\r\n\r\nexport default Dialogs;\r\n","import React from \"react\";\r\n\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {\r\n  sendMessageCreator,\r\n  updNewMessageBodyCreator,\r\n} from \"../../redux/dialogsReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n// const DialogsContainer = (props) => {\r\n//   // console.log(messageElement);\r\n\r\n//   return (\r\n//     <StoreContent.Consumer>\r\n//       {(store) => {\r\n//         let onSendMessageClick = () => {\r\n//           store.dispatch(sendMessageCreator());\r\n//         };\r\n//         let onNewMessageSend = (body) => {\r\n//           store.dispatch(updNewMessageBodyCreator(body));\r\n//         };\r\n//         return (\r\n//           <Dialogs\r\n//             updNewMessageBody={onNewMessageSend}\r\n//             sendMessage={onSendMessageClick}\r\n//             dialogsPage={store.getState().dialogsPage}\r\n//           />\r\n//         );\r\n//       }}\r\n//     </StoreContent.Consumer>\r\n//   );\r\n// };\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n  };\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessage: (newMessageBody) => {\r\n      dispatch(sendMessageCreator(newMessageBody));\r\n    },\r\n    // updNewMessageBody: (body) => {\r\n    //   dispatch(updNewMessageBodyCreator(body));\r\n    // },\r\n  };\r\n};\r\n// compose(\r\n//   connect(mapStateToProps, mapDispatchToProps),\r\n//   withAuthRedirect\r\n// )(Dialogs);\r\n\r\n// let AuthRedirectComponent = withAuthRedirect(Dialogs);\r\n\r\n// const DialogsContainer = connect(\r\n//   mapStateToProps,\r\n//   mapDispatchToProps\r\n// )(AuthRedirectComponent);\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs);\r\n"],"sourceRoot":""}