{"version":3,"sources":["components/Users/users.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Navbar/Navbar.module.css","serviceWorker.js","api/api.js","redux/profileReducer.js","utils/validators/objects-helpers.js","redux/usersReducer.js","redux/authReducer.js","redux/appReducer.js","redux/redux-store.js","components/Navbar/Navbar.jsx","components/Music/Music.jsx","components/News/News.jsx","components/Settings/Settings.jsx","assets/img/userProfile.png","components/common/Paginator/Paginator.jsx","components/Users/Users.js","assets/img/preloader.svg","components/common/preloader/preloader.js","redux/userSelectors.js","components/Users/UsersContainer.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","App.js","index.js","utils/validators/validators.js","components/common/FormsControls/FormsControl.js","components/common/FormsControls/FormsControl.module.css","components/common/Paginator/Paginator.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Header/Header.module.css","redux/dialogsReducer.js","hoc/withAuthRedirect.js"],"names":["module","exports","Boolean","window","location","hostname","match","instance","axios","withCredentials","baseURL","headers","usersAPI","followUser","id","post","unfollowUser","delete","getUsers","currentPage","pageSize","get","then","response","data","getProfile","profileAPI","getStatus","updateStatus","status","put","authAPI","email","password","rememberMe","ADD_POST","UPD_NEW_POST","SET_USER_PROFILE","SET_STATUS","initialState","postsData","message","likesCount","newPostText","profile","setStatus","type","profileReducer","state","action","newPost","newPostBody","newText","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","totalUsersCount","isFetching","followingInProgress","followSuccess","userId","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleIsFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","followed","count","filter","SET_USER_DATA","login","isAuth","setAuthUserData","payload","getAuthUserData","authReducer","INITIALIZED_SUCCESS","initialized","appReducer","reducers","combineReducers","profilePage","dialogsPage","dialogsReducer","usersPage","auth","form","formReducer","app","store","createStore","applyMiddleware","thunkMiddleWear","Navbar","className","s","nav","item","to","activeClassName","active","Music","props","News","Settings","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","styles","paginator","onClick","p","on","selectedPage","pageNumber","e","Users","src","photos","small","userPhoto","alt","disabled","some","unfollow","follow","name","Preloader","style","backgoundColor","preloader","getUserSuperSelector","createSelector","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","this","React","Component","compose","connect","bind","page","totalCount","Post","likeCounter","MyPosts","memo","console","log","postsElements","posts","el","postsBlock","AddPostFormRedux","onSubmit","value","addPost","maxLength30","maxLengthCreator","reduxForm","handleSubmit","Field","component","Textarea","validate","requiredField","placeholder","MyPostsContainer","addPostActionCreator","ProfileStatusWithHooks","editMode","setEditMode","useEffect","onDoubleClick","autoFocus","onBlur","onChange","currentTarget","ProfileInfo","descriptionBlock","large","aboutMe","contacts","github","Profile","source","ProfileContainer","params","authorizedUserId","history","getUserProfile","withRouter","Header","header","loginBlock","logout","HeaderContainer","maxLength50","LoginReduxForm","Input","error","formSummaryError","undefined","messages","length","stopSubmit","_error","formData","DialogsContainer","lazy","App","initializeApp","path","render","Suspense","fallback","promise","Promise","all","ReactDOM","StrictMode","basename","process","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","maxLength","FormControl","input","meta","child","hasError","touched","formControl","children","restProps","SEND_MESSAGE","dialogs","sendMessageCreator","newMessageBody","body","mapStateToPropsForRedirect","withAuthRedirect","RedirectComponent"],"mappings":"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","file":"static/js/main.4834c14e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__WRhjO\",\"selectedPage\":\"users_selectedPage__9Hng2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1GQIC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3D2Bp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2RyJ3\",\"item\":\"Navbar_item__3OMqT\",\"active\":\"Navbar_active__2Yq6v\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  withCredentials: true,\r\n  baseURL: `https://social-network.samuraijs.com/api/1.0/`,\r\n  headers: {\r\n    \"API-KEY\": \"57368bc4-d48a-40e2-a8d3-b15cab860ea4\",\r\n  },\r\n});\r\n\r\n// export const getUsers = (currentPage = 1, pageSize = 10) => {\r\n//   return instance.get(`users?page=${currentPage}&count=${pageSize}`);\r\n//   // .then((response) => response.data);\r\n// };\r\n\r\n// export const authMe = () => {\r\n//   return authAPI.me();\r\n// };\r\n\r\n// export const followUser = (id) => {\r\n//   return instance.post(`follow/${id}`).then((response) => response.data);\r\n// };\r\n\r\n// export const unfollowUser = (id) => {\r\n//   return instance.delete(`follow/${id}`).then((response) => response.data);\r\n// };\r\n\r\nexport const getProfile = (id) => {\r\n  return profileAPI.getProfile(id);\r\n};\r\n\r\nexport const usersAPI = {\r\n  followUser(id) {\r\n    return instance.post(`follow/${id}`);\r\n  },\r\n  unfollowUser(id) {\r\n    return instance.delete(`follow/${id}`);\r\n  },\r\n  getUsers(currentPage = 1, pageSize = 10) {\r\n    return instance\r\n      .get(`users?page=${currentPage}&count=${pageSize}`)\r\n      .then((response) => response.data);\r\n  },\r\n  getProfile(id) {\r\n    return instance.get(`profile/${id}`);\r\n  },\r\n};\r\n\r\nexport const profileAPI = {\r\n  getProfile(id) {\r\n    return instance.get(`profile/${id}`);\r\n  },\r\n  getStatus(id) {\r\n    return instance.get(`profile/status/${id}`);\r\n  },\r\n  updateStatus(status) {\r\n    return instance.put(`profile/status`, { status: status });\r\n  },\r\n};\r\n\r\nexport const authAPI = {\r\n  me() {\r\n    return instance.get(`auth/me`);\r\n  },\r\n  login(email, password, rememberMe = false) {\r\n    return instance.post(`auth/login`, { email, password, rememberMe });\r\n  },\r\n  logout() {\r\n    return instance.delete(`auth/login`);\r\n  },\r\n};\r\n\r\n// axios\r\n// .get(`https://social-network.samuraijs.com/api/1.0/profile/${userId}`)\r\n// .then((response) => {\r\n//   this.props.setUserProfile(response.data);\r\n// });\r\n","import { getProfile, profileAPI, usersAPI } from \"../api/api\";\r\n\r\nconst ADD_POST = \"ADD-POST\";\r\n\r\nconst UPD_NEW_POST = \"UPDATE-NEW-POST-TEXT\";\r\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\";\r\nconst SET_STATUS = \"SET_STATUS\";\r\nlet initialState = {\r\n  postsData: [\r\n    { id: 1, message: \"Hello! \", likesCount: \"2\" },\r\n    { id: 2, message: \"How are you?\", likesCount: \"4\" },\r\n  ],\r\n  newPostText: \"Hello\",\r\n  profile: null,\r\n  status: \"ааа\",\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_POST: {\r\n      let newPost = {\r\n        id: 3,\r\n        message: action.newPostBody,\r\n        likesCount: 0,\r\n      };\r\n      return {\r\n        ...state,\r\n        postsData: [...state.postsData, newPost],\r\n        newPostText: \"\",\r\n      };\r\n      // stateCopy.postsData = [...state.postsData];\r\n      // stateCopy.postsData.push(newPost);\r\n      // stateCopy.newPostText = \"\";\r\n    }\r\n    case UPD_NEW_POST: {\r\n      return { ...state, newPostText: action.newText };\r\n    }\r\n    case SET_USER_PROFILE: {\r\n      return { ...state, profile: action.profile };\r\n    }\r\n    case SET_STATUS: {\r\n      return { ...state, status: action.status };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport const addPostActionCreator = (newPostBody) => ({\r\n  type: ADD_POST,\r\n  newPostBody,\r\n});\r\n\r\nconst setUserProfile = (profile) => ({\r\n  type: SET_USER_PROFILE,\r\n  profile,\r\n});\r\nexport const updNewPostActionCreator = (text) => {\r\n  return {\r\n    type: UPD_NEW_POST,\r\n    newText: text,\r\n  };\r\n};\r\nexport const setStatus = (status) => ({\r\n  type: SET_STATUS,\r\n  status,\r\n});\r\n// export const getUserProfile = (userId) => (dispatch) => {\r\n//   getProfile(userId).then((response) => {\r\n//     dispatch(setUserProfile(response.data));\r\n//   });\r\n// };\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n  const response = await profileAPI.getProfile(userId);\r\n  dispatch(setUserProfile(response.data));\r\n};\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n  let response = await profileAPI.getStatus(userId);\r\n  dispatch(setStatus(response.data));\r\n};\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n  let response = await profileAPI.updateStatus(status);\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(setStatus(status));\r\n  }\r\n};\r\n\r\nexport default profileReducer;\r\n","export const updateObjectInArray = (\r\n  items,\r\n  itemId,\r\n  objPropName,\r\n  newObjProps\r\n) => {\r\n  return items.map((u) => {\r\n    if (u[objPropName] === itemId) {\r\n      return { ...u, ...newObjProps };\r\n    }\r\n    return u;\r\n  });\r\n};\r\n","import { getUsers, followUser, unfollowUser, usersAPI } from \"../api/api\";\r\nimport { updateObjectInArray } from \"../utils/validators/objects-helpers\";\r\n\r\nconst FOLLOW = \"FOLLOW\";\r\nconst UNFOLLOW = \"UNFOLLOW\";\r\nconst SET_USERS = \"SET_USERS\";\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nconst SET_TOTAL_USERS_COUNT = \"SET_TOTAL_USERS_COUNT\";\r\nconst TOGGLE_IS_FETCHING = \"TOTAL_IS_FETCHING\";\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = \"TOTAL_IS_FOLLOWING_PROGRESS\";\r\nlet initialState = {\r\n  users: [],\r\n  pageSize: 100,\r\n  totalUsersCount: 0,\r\n  currentPage: 1,\r\n  isFetching: false,\r\n  followingInProgress: [],\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FOLLOW:\r\n      return {\r\n        ...state,\r\n        users: updateObjectInArray(state.users, action.userId, \"id\", {\r\n          followed: true,\r\n        }),\r\n        // users: state.users.map((u) => {\r\n        //   if (u.id === action.userId) {\r\n        //     return { ...u, followed: true };\r\n        //   }\r\n        //   return u;\r\n        // }),\r\n      };\r\n\r\n    case UNFOLLOW:\r\n      return {\r\n        ...state,\r\n        users: updateObjectInArray(state.users, action.userId, \"id\", {\r\n          followed: false,\r\n        }),\r\n        // users: state.users.map((u) => {\r\n        //   if (u.id === action.userId) {\r\n        //     return { ...u, followed: false };\r\n        //   }\r\n        //   return u;\r\n        // }),\r\n      };\r\n    case SET_USERS: {\r\n      return { ...state, users: action.users };\r\n    }\r\n    case SET_CURRENT_PAGE: {\r\n      return { ...state, currentPage: action.currentPage };\r\n    }\r\n    case SET_TOTAL_USERS_COUNT: {\r\n      return { ...state, totalUsersCount: action.count };\r\n    }\r\n    case TOGGLE_IS_FETCHING: {\r\n      return { ...state, isFetching: action.isFetching };\r\n    }\r\n    case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n      return {\r\n        ...state,\r\n        followingInProgress: action.isFetching\r\n          ? [...state.followingInProgress, action.userId]\r\n          : state.followingInProgress.filter((id) => id !== action.userId),\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport const followSuccess = (userId) => ({\r\n  type: FOLLOW,\r\n  userId,\r\n});\r\nexport const unfollowSuccess = (userId) => ({\r\n  type: UNFOLLOW,\r\n  userId,\r\n});\r\nexport const setUsers = (users) => ({\r\n  type: SET_USERS,\r\n  users,\r\n});\r\nexport const setCurrentPage = (currentPage) => ({\r\n  type: SET_CURRENT_PAGE,\r\n  currentPage,\r\n});\r\nexport const setUsersTotalCount = (totalUsersCount) => ({\r\n  type: SET_TOTAL_USERS_COUNT,\r\n  count: totalUsersCount,\r\n});\r\nexport const toggleIsFetching = (isFetching) => ({\r\n  type: TOGGLE_IS_FETCHING,\r\n  isFetching,\r\n});\r\n\r\nexport const toggleIsFollowingProgress = (isFetching, userId) => ({\r\n  type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n  isFetching,\r\n  userId,\r\n});\r\n// export const getUsersThunk = (page, pageSize) => {\r\n//   return async (dispatch) => {\r\n//     dispatch(toggleIsFetching(true));\r\n//     dispatch(setCurrentPage(page));\r\n//     let data = await getUsers(page, pageSize);\r\n//     dispatch(toggleIsFetching(false));\r\n//     dispatch(setUsers(data.items));\r\n//     dispatch(setUsersTotalCount(data.totalCount));\r\n//   };\r\n// };\r\nexport const getUsersThunk = (page, pageSize) => {\r\n  return async (dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n    dispatch(setCurrentPage(page));\r\n    let data = await usersAPI.getUsers(page, pageSize);\r\n\r\n    dispatch(toggleIsFetching(false));\r\n    dispatch(setUsers(data.items));\r\n    dispatch(setUsersTotalCount(data.totalCount));\r\n  };\r\n};\r\nconst followUnfollowFlow = async (\r\n  dispatch,\r\n  userId,\r\n  apiMethod,\r\n  actionCreator\r\n) => {\r\n  dispatch(toggleIsFollowingProgress(true, userId));\r\n  let data = await apiMethod(userId);\r\n  if (data.resultCode == 0) {\r\n    dispatch(actionCreator(userId));\r\n  }\r\n  dispatch(toggleIsFollowingProgress(false, userId));\r\n};\r\n// export const follow = (userId) => {\r\n//   return (dispatch) => {\r\n//     dispatch(toggleIsFollowingProgress(true, userId));\r\n//     followUser(userId).then((data) => {\r\n//       if (data.resultCode == 0) {\r\n//         dispatch(followSuccess(userId));\r\n//       }\r\n//       dispatch(toggleIsFollowingProgress(false, userId));\r\n//       // this.props.setTotalUsersCount(response.data.count);\r\n//     });\r\n//   };\r\n// };\r\n\r\n// export const unfollow = (userId) => {\r\n//   return (dispatch) => {\r\n//     dispatch(toggleIsFollowingProgress(true, userId));\r\n//     unfollowUser(userId).then((data) => {\r\n//       if (data.resultCode == 0) {\r\n//         dispatch(unfollowSuccess(userId));\r\n//       }\r\n//       dispatch(toggleIsFollowingProgress(false, userId));\r\n//       // this.props.setTotalUsersCount(response.data.count);\r\n//     });\r\n//   };\r\n// };\r\n\r\nexport const follow = (userId) => {\r\n  return async (dispatch) => {\r\n    let apiMethod = await usersAPI.followUser.bind(usersAPI);\r\n    // let actionCreator = followSuccess;\r\n    followUnfollowFlow(dispatch, userId, apiMethod, followSuccess);\r\n    // dispatch(toggleIsFollowingProgress(true, userId));\r\n    // let data = await apiMethod(userId);\r\n    // if (data.resultCode == 0) {\r\n    //   dispatch(actionCreator(userId));\r\n    // }\r\n    // dispatch(toggleIsFollowingProgress(false, userId));\r\n    // this.props.setTotalUsersCount(response.data.count);\r\n  };\r\n};\r\n\r\nexport const unfollow = (userId) => {\r\n  return async (dispatch) => {\r\n    let apiMethod = await usersAPI.unfollowUser.bind(usersAPI);\r\n    // let actionCreator = unfollowSuccess;\r\n    followUnfollowFlow(dispatch, userId, apiMethod, unfollowSuccess);\r\n    // dispatch(toggleIsFollowingProgress(true, userId));\r\n    // let data = await apiMethod(userId);\r\n    // if (data.resultCode == 0) {\r\n    //   dispatch(actionCreator(userId));\r\n    // }\r\n    // dispatch(toggleIsFollowingProgress(false, userId));\r\n    // this.props.setTotalUsersCount(response.data.count);\r\n  };\r\n};\r\n\r\nexport default usersReducer;\r\n","import { authAPI, authMe } from \"../api/api\";\r\nimport { stopSubmit } from \"redux-form\";\r\nconst SET_USER_DATA = \"network/auth/SET_USER_DATA\";\r\n\r\nlet initialState = {\r\n  userId: null,\r\n  email: null,\r\n  login: null,\r\n  isAuth: false,\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_USER_DATA:\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n  type: SET_USER_DATA,\r\n  payload: {\r\n    userId,\r\n    email,\r\n    login,\r\n    isAuth,\r\n  },\r\n});\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n  let response = await authAPI.me();\r\n  if (response.data.resultCode === 0) {\r\n    let { id, login, email } = response.data.data;\r\n    dispatch(setAuthUserData(id, email, login, true));\r\n  }\r\n};\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n  let response = await authAPI.login(email, password, rememberMe);\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(getAuthUserData());\r\n  } else {\r\n    let message =\r\n      response.data.messages.length > 0\r\n        ? response.data.messages[0]\r\n        : \"Some error\";\r\n    dispatch(stopSubmit(\"login\", { _error: \"Common error\" }));\r\n  }\r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n  let response = await authAPI.logout();\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(setAuthUserData(null, null, null, false));\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","import { authAPI, authMe, profileAPI } from \"../api/api\";\r\nimport { stopSubmit } from \"redux-form\";\r\nimport { getAuthUserData } from \"./authReducer\";\r\nconst INITIALIZED_SUCCESS = \"INITIALIZED_SUCCESS\";\r\n\r\nlet initialState = {\r\n  initialized: false,\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case INITIALIZED_SUCCESS:\r\n      return {\r\n        ...state,\r\n        initialized: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport const initializedSuccess = () => ({\r\n  type: INITIALIZED_SUCCESS,\r\n});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n  let promise = dispatch(getAuthUserData());\r\n\r\n  Promise.all([promise]).then(() => {\r\n    dispatch(initializedSuccess());\r\n  });\r\n};\r\n\r\nexport default appReducer;\r\n","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport dialogsReducer from \"./dialogsReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport thunkMiddleWear from \"redux-thunk\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\nimport appReducer from \"./appReducer\";\r\n\r\nlet reducers = combineReducers({\r\n  profilePage: profileReducer,\r\n  dialogsPage: dialogsReducer,\r\n  usersPage: usersReducer,\r\n  auth: authReducer,\r\n  form: formReducer,\r\n  app: appReducer,\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleWear));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport s from \"./Navbar.module.css\";\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className={s.nav}>\r\n      <div className={s.item}>\r\n        <NavLink to=\"/profile\" activeClassName={s.active}>\r\n          Profile\r\n        </NavLink>\r\n      </div>\r\n      <div className={s.item}>\r\n        <NavLink to=\"/dialogs\" activeClassName={s.active}>\r\n          Messages\r\n        </NavLink>\r\n      </div>\r\n      <div className={s.item}>\r\n        <NavLink to=\"/users\" activeClassName={s.active}>\r\n          Users\r\n        </NavLink>\r\n      </div>\r\n      <div className={s.item}>\r\n        <NavLink to=\"/music\" activeClassName={s.active}>\r\n          Music\r\n        </NavLink>\r\n      </div>\r\n      <div className={s.item}>\r\n        <NavLink to=\"/news\" activeClassName={s.active}>\r\n          News\r\n        </NavLink>\r\n      </div>\r\n      <div className={s.item}>\r\n        <NavLink to=\"/settings\" activeClassName={s.active}>\r\n          Settings\r\n        </NavLink>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport s from \"./Music.module.css\";\r\n\r\nconst Music = (props) => {\r\n  return <div>Music</div>;\r\n};\r\n\r\nexport default Music;\r\n","import React from \"react\";\r\nimport s from \"./News.module.css\";\r\n\r\nconst News = (props) => {\r\n  return <div>News</div>;\r\n};\r\n\r\nexport default News;\r\n","import React from \"react\";\r\nimport s from \"./Settings.module.css\";\r\n\r\nconst Settings = (props) => {\r\n  return <div>Settings</div>;\r\n};\r\n\r\nexport default Settings;\r\n","export default __webpack_public_path__ + \"static/media/userProfile.58de24df.png\";","import React, { useState } from \"react\";\r\nimport styles from \"./Paginator.module.css\";\r\nimport on from \"classnames\";\r\n\r\nimport { followUser, unfollowUser } from \"../../../api/api\";\r\nlet Paginator = ({\r\n  totalItemsCount,\r\n  pageSize,\r\n  currentPage,\r\n  onPageChanged,\r\n  portionSize = 10,\r\n}) => {\r\n  let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n  let pages = [];\r\n  for (let i = 1; i <= pagesCount; i++) {\r\n    pages.push(i);\r\n  }\r\n  let portionCount = Math.ceil(pagesCount / portionSize);\r\n  let [portionNumber, setPortionNumber] = useState(1);\r\n  let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n  let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n  return (\r\n    <div className={styles.paginator}>\r\n      {portionNumber > 1 && (\r\n        <button\r\n          onClick={() => {\r\n            setPortionNumber(portionNumber - 1);\r\n          }}\r\n        >\r\n          Prev\r\n        </button>\r\n      )}\r\n      {pages\r\n        .filter(\r\n          (p) => p >= leftPortionPageNumber && p <= rightPortionPageNumber\r\n        )\r\n        .map((p) => {\r\n          return (\r\n            <span\r\n              className={on(\r\n                { [styles.selectedPage]: currentPage === p },\r\n                styles.pageNumber\r\n              )}\r\n              key={p}\r\n              onClick={(e) => onPageChanged(p)}\r\n            >\r\n              {p}\r\n            </span>\r\n          );\r\n        })}\r\n      {portionCount > portionNumber && (\r\n        <button\r\n          onClick={() => {\r\n            setPortionNumber(portionNumber + 1);\r\n          }}\r\n        >\r\n          Next\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Paginator;\r\n","import React from \"react\";\r\nimport userPhoto from \"../../assets/img/userProfile.png\";\r\nimport styles from \"./users.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport { followUser, unfollowUser } from \"../../api/api\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nlet Users = ({\r\n  currentPage,\r\n  onPageChanged,\r\n  totalUsersCount,\r\n  pageSize,\r\n  ...props\r\n}) => {\r\n \r\n  return (\r\n    <div>\r\n      <Paginator\r\n        currentPage={currentPage}\r\n        onPageChanged={onPageChanged}\r\n        totalItemsCount={totalUsersCount}\r\n        pageSize={pageSize}\r\n      />\r\n\r\n      {/* <button onClick={this.getUsers}>Get users</button> */}\r\n      {props.users.map((u) => (\r\n        <div key={u.id}>\r\n          <span>\r\n            <div>\r\n              <NavLink to={\"profile/\" + u.id}>\r\n                {\" \"}\r\n                <img\r\n                  src={u.photos.small != null ? u.photos.small : userPhoto}\r\n                  alt=\"\"\r\n                  className={styles.userPhoto}\r\n                />{\" \"}\r\n              </NavLink>\r\n            </div>\r\n          </span>\r\n          <span>\r\n            <div>\r\n              {u.followed ? (\r\n                <button\r\n                  disabled={props.followingInProgress.some((id) => id === u.id)}\r\n                  onClick={() => {\r\n                    props.unfollow(u.id);\r\n                  }}\r\n                  // props.toggleIsFollowingProgress(true, u.id);\r\n                  // unfollowUser(u.id).then((data) => {\r\n                  //   if (data.resultCode == 0) {\r\n                  //     props.unfollow(u.id);\r\n                  //   }\r\n                  //   props.toggleIsFollowingProgress(false, u.id);\r\n                  //   // this.props.setTotalUsersCount(response.data.count);\r\n                  // });\r\n                >\r\n                  Unfollow\r\n                </button>\r\n              ) : (\r\n                <button\r\n                  disabled={props.followingInProgress.some((id) => id === u.id)}\r\n                  onClick={() => {\r\n                    props.follow(u.id);\r\n                  }}\r\n                  // props.toggleIsFollowingProgress(true, u.id);\r\n                  // followUser(u.id).then((data) => {\r\n                  //   if (data.resultCode == 0) {\r\n                  //     props.follow(u.id);\r\n                  //   }\r\n                  //   props.toggleIsFollowingProgress(false, u.id);\r\n                  //   // this.props.setTotalUsersCount(response.data.count);\r\n                  // });\r\n                  // props.follow(u.id);\r\n                >\r\n                  Follow\r\n                </button>\r\n              )}\r\n            </div>\r\n          </span>\r\n          <span>\r\n            <span>\r\n              <div>{u.name}</div>\r\n              <div>{u.status}</div>\r\n            </span>\r\n            <span>\r\n              <div>{\"u.location.country\"}</div>\r\n              <div>{\"u.location.city\"}</div>\r\n            </span>\r\n          </span>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","export default __webpack_public_path__ + \"static/media/preloader.48c45b44.svg\";","import React from \"react\";\r\nimport preloader from \"../../../assets/img/preloader.svg\";\r\n\r\nlet Preloader = (props) => {\r\n  return (\r\n    <div style={{ backgoundColor: \"white\" }}>\r\n      <img src={preloader} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Preloader;\r\n","import { createSelector } from \"reselect\";\r\n\r\nexport const getUser = (state) => {\r\n  return state.usersPage.users;\r\n};\r\n\r\nexport const getUserSuperSelector = createSelector(getUser, (users) => {\r\n  return users;\r\n});\r\n\r\nexport const getPageSize = (state) => {\r\n  return state.usersPage.pageSize;\r\n};\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n  return state.usersPage.totalUsersCount;\r\n};\r\n\r\nexport const getCurrentPage = (state) => {\r\n  return state.usersPage.currentPage;\r\n};\r\n\r\nexport const getIsFetching = (state) => {\r\n  return state.usersPage.isFetching;\r\n};\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n  return state.usersPage.followingInProgress;\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  follow,\r\n  setUsers,\r\n  unfollow,\r\n  setCurrentPage,\r\n  setUsersTotalCount,\r\n  toggleIsFetching,\r\n  toggleIsFollowingProgress,\r\n  getUsersThunk,\r\n} from \"../../redux/usersReducer\";\r\n\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../common/preloader/preloader\";\r\nimport { getUsers } from \"../../api/api\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\nimport {\r\n  getUser,\r\n  getPageSize,\r\n  getTotalUsersCount,\r\n  getCurrentPage,\r\n  getIsFetching,\r\n  getFollowingInProgress,\r\n  getUserSuperSelector,\r\n} from \"../../redux/userSelectors\";\r\n// import UsersAPIComponent from \"./UsersAPIComponent\";\r\n\r\nclass UsersContainer extends React.Component {\r\n  componentDidMount() {\r\n    this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n    // this.props.toggleIsFetching(true);\r\n    // getUsers(this.props.currentPage, this.props.pageSize).then((data) => {\r\n    //   this.props.toggleIsFetching(false);\r\n    //   this.props.setUsers(data.items);\r\n    //   this.props.setUsersTotalCount(data.totalCount);\r\n    // });\r\n  }\r\n  onPageChanged = (pageNumber) => {\r\n    this.props.getUsers(pageNumber, this.props.pageSize);\r\n    // this.props.setCurrentPage(pageNumber);\r\n    // this.props.toggleIsFetching(true);\r\n    // getUsers(pageNumber, this.props.pageSize).then((data) => {\r\n    //   this.props.toggleIsFetching(false);\r\n    //   this.props.setUsers(data.items);\r\n    //   // this.props.setTotalUsersCount(response.data.count);\r\n    // });\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.props.isFetching ? <Preloader /> : null}\r\n        <Users\r\n          totalUsersCount={this.props.totalUsersCount}\r\n          pageSize={this.props.pageSize}\r\n          currentPage={this.props.currentPage}\r\n          onPageChanged={this.onPageChanged}\r\n          users={this.props.users}\r\n          follow={this.props.follow}\r\n          unfollow={this.props.unfollow}\r\n          // toggleIsFollowingProgress={this.props.toggleIsFollowingProgress}\r\n          followingInProgress={this.props.followingInProgress}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    //users: getUser(state),\r\n    users: getUserSuperSelector(state),\r\n    pageSize: getPageSize(state),\r\n    totalUsersCount: getTotalUsersCount(state),\r\n    currentPage: getCurrentPage(state),\r\n    isFetching: getIsFetching(state),\r\n    followingInProgress: getFollowingInProgress(state),\r\n  };\r\n};\r\n// let mapDispatchToProps = (dispatch) => {\r\n//   return {\r\n//     follow: (userId) => {\r\n//       dispatch(followAC(userId));\r\n//     },\r\n//     unfollow: (userId) => {\r\n//       dispatch(unfollowAC(userId));\r\n//     },\r\n//     setUsers: (users) => {\r\n//       dispatch(setUsersAC(users));\r\n//     },\r\n//     setCurrentPage: (pageNumber) => {\r\n//       dispatch(setCurrentPageAC(pageNumber));\r\n//     },\r\n//     setTotalUsersCount: (totalCount) => {\r\n//       dispatch(setUsersTotalCountAC(totalCount));\r\n//     },\r\n//     toggleIsFetching: (isFetching) => {\r\n//       dispatch(toggleIsFetchingAC(isFetching));\r\n//     },\r\n//   };\r\n// };\r\n\r\n// let withUsersRedirect = withAuthRedirect(UsersContainer);\r\n\r\n// export default withAuthRedirect(\r\n//   connect(mapStateToProps, {\r\n//     follow,\r\n//     unfollow,\r\n//     // setUsers,\r\n//     setCurrentPage,\r\n//     // setUsersTotalCount,\r\n//     // toggleIsFetching,\r\n//     toggleIsFollowingProgress,\r\n//     getUsers: getUsersThunk,\r\n//   })(UsersContainer)\r\n// );\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    follow,\r\n    unfollow,\r\n    // setUsers,\r\n    setCurrentPage,\r\n    // setUsersTotalCount,\r\n    // toggleIsFetching,\r\n    toggleIsFollowingProgress,\r\n    getUsers: getUsersThunk,\r\n  })\r\n  //withAuthRedirect\r\n)(UsersContainer);\r\n\r\n// let name = 5;\r\n// let nameobj = {\r\n//   name\r\n// }  =>    {name: name(5)}\r\n","import React from \"react\";\r\nimport s from \"./Post.module.css\";\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img\r\n        src=\"https://media.sproutsocial.com/uploads/2017/02/10x-featured-social-media-image-size.png\"\r\n        alt=\"\"\r\n      />\r\n      {props.message}\r\n      <div>like: {props.likeCounter}</div>\r\n    </div>\r\n  );\r\n};\r\nexport default Post;\r\n","import React from \"react\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport { reduxForm, Field } from \"redux-form\";\r\nimport { Textarea } from \"../../common/FormsControls/FormsControl\";\r\nimport {\r\n  requiredField,\r\n  maxLengthCreator,\r\n} from \"../../../utils/validators/validators\";\r\nimport {\r\n  addPostActionCreator,\r\n  updNewPostActionCreator,\r\n} from \"../../../redux/profileReducer\";\r\nimport thunk from \"redux-thunk\";\r\n\r\n// class MyPosts extends React.Component {\r\n//   // shouldComponentUpdate(nextProps, nextState) {\r\n//   //   return nextProps != this.props || nextState != this.state;\r\n//   // }\r\n//   render() {\r\n//     console.log(\"render yo\");\r\n//     let postsElements = this.props.posts.map((el) => (\r\n//       <Post message={el.message} likeCounter={el.likesCount} />\r\n//     ));\r\n\r\n//     let newPostElement = React.createRef();\r\n\r\n//     let onAddPost = () => {\r\n//       // let text = newPostElement.current.value;\r\n//       this.props.addPost();\r\n//       //props.dispatch(addPostActionCreator());\r\n//     };\r\n\r\n//     let onPostChange = () => {\r\n//       let text = newPostElement.current.value;\r\n//       this.props.updNewMessageBody(text);\r\n//     };\r\n//     let addNewPost = (value) => {\r\n//       this.props.addPost(value.newPostBody);\r\n//     };\r\n//     return (\r\n//       <div className={s.postsBlock}>\r\n//         <h3>My posts</h3>\r\n//         <AddPostFormRedux onSubmit={addNewPost} />\r\n//         <div className={s.posts}>{postsElements}</div>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\nconst MyPosts = React.memo((props) => {\r\n  console.log(\"render\");\r\n  let postsElements = [...props.posts].map((el) => (\r\n    <Post message={el.message} likeCounter={el.likesCount} />\r\n  ));\r\n\r\n  let newPostElement = React.createRef();\r\n\r\n  let onAddPost = () => {\r\n    // let text = newPostElement.current.value;\r\n    props.addPost();\r\n    //props.dispatch(addPostActionCreator());\r\n  };\r\n\r\n  let onPostChange = () => {\r\n    let text = newPostElement.current.value;\r\n    props.updNewMessageBody(text);\r\n  };\r\n  let addNewPost = (value) => {\r\n    props.addPost(value.newPostBody);\r\n  };\r\n  return (\r\n    <div className={s.postsBlock}>\r\n      <h3>My posts</h3>\r\n      <AddPostFormRedux onSubmit={addNewPost} />\r\n      <div className={s.posts}>{postsElements}</div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default MyPosts;\r\nlet maxLength30 = maxLengthCreator(30);\r\nconst AddPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          component={Textarea}\r\n          name=\"newPostBody\"\r\n          validate={[requiredField, maxLength30]}\r\n          placeholder=\"Post message\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <button>Add post</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst AddPostFormRedux = reduxForm({ form: \"newAddPostForm\" })(AddPostForm);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  addPostActionCreator,\r\n  updNewPostActionCreator,\r\n} from \"../../../redux/profileReducer\";\r\n\r\nimport MyPosts from \"./MyPosts\";\r\n\r\n// const MyPostsContainer = (props) => {\r\n//   // let state = props.store.getState();\r\n\r\n//   return (\r\n//     <StoreContent.Consumer>\r\n//       {(store) => {\r\n//         let addPost = () => {\r\n//           store.dispatch(addPostActionCreator());\r\n//         };\r\n\r\n//         let onPostChange = (text) => {\r\n//           let action = updNewPostActionCreator(text);\r\n//           store.dispatch(action);\r\n//         };\r\n//         return (\r\n//           <MyPosts\r\n//             updNewPostText={onPostChange}\r\n//             addPost={addPost}\r\n//             posts={store.getState().profilePage.postsData}\r\n//             newPostText={store.getState().profilePage.newPostText}\r\n//           />\r\n//         );\r\n//       }}\r\n//     </StoreContent.Consumer>\r\n//   );\r\n// };\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.postsData,\r\n    newPostText: state.profilePage.newPostText,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    // updNewMessageBody: (text) => {\r\n    //   let action = updNewPostActionCreator(text);\r\n    //   dispatch(action);\r\n    // },\r\n    addPost: (newPostBody) => {\r\n      dispatch(addPostActionCreator(newPostBody));\r\n    },\r\n  };\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\nexport default MyPostsContainer;\r\n","import React from \"react\";\r\nimport Preloader from \"../../common/preloader/preloader\";\r\n\r\nexport class ProfileStatus extends React.Component {\r\n  //   statusInputRef = React.createRef();\r\n  state = {\r\n    editMode: false,\r\n    status: this.props.status,\r\n  };\r\n  activateEditMode = () => {\r\n    // debugger;\r\n    // console.log(this);\r\n    this.setState({\r\n      editMode: true,\r\n      //   status: this.props.status,\r\n    });\r\n  };\r\n  deactivateEditMode = () => {\r\n    this.setState({\r\n      editMode: false,\r\n    });\r\n    this.props.updateStatus(this.state.status);\r\n  };\r\n  onStatusChange = (e) => {\r\n    console.log(e.currentTarget.value);\r\n    this.setState({\r\n      status: e.currentTarget.value,\r\n    });\r\n  };\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.status !== this.props.status) {\r\n      this.setState({\r\n        status: this.props.status,\r\n      });\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        {!this.state.editMode && (\r\n          <div>\r\n            <h2 onDoubleClick={this.activateEditMode}>\r\n              {/* this.activateEditMode.bind(this) */}\r\n              {this.props.status || \"--------\"}\r\n            </h2>\r\n          </div>\r\n        )}\r\n        {this.state.editMode && (\r\n          <div>\r\n            <input\r\n              onChange={this.onStatusChange}\r\n              autoFocus={true}\r\n              onBlur={this.deactivateEditMode}\r\n              value={this.state.status}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Preloader from \"../../common/preloader/preloader\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n  let [editMode, setEditMode] = useState(false); //array\r\n  let [status, setStatus] = useState(props.status);\r\n  //   let editMode = stateWithSetState[0];\r\n  //   let setEditMode = stateWithSetState[1];\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  };\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  };\r\n  return (\r\n    <div>\r\n      {!editMode && (\r\n        <div>\r\n          <h2 onDoubleClick={activateEditMode}>\r\n            {/* this.activateEditMode.bind(this) */}\r\n            {props.status || \"--------\"}\r\n          </h2>\r\n        </div>\r\n      )}\r\n      {editMode && (\r\n        <div>\r\n          <input\r\n            autoFocus={true}\r\n            value={status}\r\n            onBlur={deactivateEditMode}\r\n            onChange={onStatusChange}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React from \"react\";\r\nimport Preloader from \"../../common/preloader/preloader\";\r\nimport { ProfileStatus } from \"./ProfileStatus\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = (props) => {\r\n  if (!props.profile) {\r\n    return <Preloader />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {/* <div>\r\n        <img src={props.source} />\r\n      </div> */}\r\n      <div className={s.descriptionBlock}>\r\n        <img src={props.profile.photos.large} alt=\"\" />\r\n        <div>{props.profile.aboutMe}</div>\r\n        <div>Github: {props.profile.contacts.github}</div>\r\n        <ProfileStatusWithHooks\r\n          status={props.status}\r\n          updateStatus={props.updateStatus}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n// import s from \"./Profile.module.css\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nconst Profile = (props) => {\r\n  return (\r\n    <div>\r\n      <ProfileInfo\r\n        source=\"https://media.sproutsocial.com/uploads/2017/02/10x-featured-social-media-image-size.png\"\r\n        profile={props.profile}\r\n        status={props.status}\r\n        updateStatus={props.updateStatus}\r\n      />\r\n      <MyPostsContainer\r\n      // store={props.store}\r\n      // posts={props.profilePage.postsData}\r\n      // newPostText={props.profilePage.newPostText}\r\n      // dispatch={props.dispatch}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default Profile;\r\n","import axios from \"axios\";\r\nimport React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getUserProfile,\r\n  getStatus,\r\n  updateStatus,\r\n} from \"../../redux/profileReducer\";\r\nimport { withRouter, Redirect } from \"react-router-dom\";\r\nimport { getProfile } from \"../../api/api\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId;\r\n    // console.log(this.props);\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId;\r\n      if (!userId) {\r\n        // console.log(this.props);\r\n        this.props.history.push(\"/login\");\r\n      }\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    // setTimeout(() => {\r\n    this.props.getStatus(userId);\r\n    // }, 1000);\r\n    // this.props.getStatus(userId);\r\n  }\r\n  render() {\r\n    return (\r\n      <Profile\r\n        {...this.props}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        updateStatus={this.props.updateStatus}\r\n      />\r\n    );\r\n  }\r\n}\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\r\n  withRouter\r\n  // withAuthRedirect\r\n)(ProfileContainer);\r\n\r\n// let AuthRedirectComponent = withAuthRedirect(ProfileContainer);\r\n\r\n// let WithURLDataContainerComponent = withRouter(AuthRedirectComponent);\r\n// export default connect(mapStateToProps, { getUserProfile })(\r\n//   WithURLDataContainerComponent\r\n// );\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport s from \"./Header.module.css\";\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <header className={s.header}>\r\n      <img\r\n        src=\"https://media.sproutsocial.com/uploads/2017/02/10x-featured-social-media-image-size.png\"\r\n        alt=\"\"\r\n      />\r\n      <div className={s.loginBlock}>\r\n        {props.isAuth ? (\r\n          <div>\r\n            {props.login} - <button onClick={props.logout}>Log out</button>\r\n          </div>\r\n        ) : (\r\n          <NavLink to={\"/login\"}>Login</NavLink>\r\n        )}\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nimport Header from \"./Header\";\r\nimport { connect } from \"react-redux\";\r\nimport { getAuthUserData } from \"../../redux/authReducer\";\r\nimport { authMe } from \"../../api/api\";\r\nimport { login, logout } from \"../../redux/authReducer\";\r\nclass HeaderContainer extends React.Component {\r\n  componentDidMount() {\r\n    // this.props.getAuthUserData();\r\n    // authMe().then((data) => {\r\n    //   if (data.resultCode === 0) {\r\n    //     let { id, login, email } = data.data;\r\n    //     this.props.setAuthUserData(id, email, login);\r\n    //   }\r\n    // });\r\n  }\r\n  render() {\r\n    return <Header {...this.props} />;\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n  login: state.auth.login,\r\n});\r\nexport default connect(mapStateToProps, { logout })(\r\n  HeaderContainer\r\n);\r\n","import React from \"react\";\r\nimport s from \"../common/FormsControls/FormsControl.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { reduxForm, Field } from \"redux-form\";\r\nimport {\r\n  maxLengthCreator,\r\n  requiredField,\r\n} from \"../../utils/validators/validators\";\r\nimport { Input } from \"../common/FormsControls/FormsControl\";\r\nimport { login, logout } from \"../../redux/authReducer\";\r\nimport { Redirect } from \"react-router-dom\";\r\nconst maxLength50 = maxLengthCreator(50);\r\nconst LoginForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          type=\"text\"\r\n          placeholder={\"Email\"}\r\n          component={Input}\r\n          validate={[requiredField, maxLength50]}\r\n          name={\"email\"}\r\n        />\r\n      </div>\r\n      <div>\r\n        <Field\r\n          type=\"password\"\r\n          placeholder={\"Password\"}\r\n          component={Input}\r\n          validate={[requiredField, maxLength50]}\r\n          name={\"password\"}\r\n        />\r\n      </div>\r\n      <div>\r\n        {\" \"}\r\n        <Field type=\"checkbox\" component={Input} name={\"rememberMe\"} /> remember\r\n        me\r\n      </div>\r\n      {props.error ? (\r\n        <div className={s.formSummaryError}>{props.error}</div>\r\n      ) : undefined}\r\n      <div>\r\n        <button>Login</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({\r\n  form: \"login\",\r\n})(LoginForm);\r\n\r\nconst Login = (props) => {\r\n  const onSubmit = (formData) => {\r\n    props.login(formData.email, formData.password, formData.rememberMe);\r\n  };\r\n  if (props.isAuth) {\r\n    return <Redirect to={\"/profile\"} />;\r\n  }\r\n  return (\r\n    <div>\r\n      <h1>Login</h1>\r\n      <LoginReduxForm onSubmit={onSubmit} />\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n});\r\nexport default connect(mapStateToProps, { login })(Login);\r\n","import React from \"react\";\nimport \"./App.css\";\n\nimport Navbar from \"./components/Navbar/Navbar\";\nimport { initializeApp } from \"./redux/appReducer\";\nimport { BrowserRouter, Route, withRouter } from \"react-router-dom\";\nimport Music from \"./components/Music/Music\";\nimport News from \"./components/News/News\";\nimport Settings from \"./components/Settings/Settings\";\n// import DialogsContainer from \"./components/Dialogs/DialogsContainer\";\n\nimport UsersContainer from \"./components/Users/UsersContainer\";\n\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Login from \"./components/Login/Login\";\nimport { connect, Provider } from \"react-redux\";\nimport { compose } from \"redux\";\nimport Preloader from \"./components/common/preloader/preloader\";\nconst DialogsContainer = React.lazy(() =>\n  import(\"./components/Dialogs/DialogsContainer\")\n);\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.initializeApp();\n  }\n  render() {\n    if (!this.props.initialized) return <Preloader />;\n    return (\n      <div className=\"app-wrapper\">\n        <HeaderContainer />\n        <Navbar />\n\n        <div className=\"app-wrapper-content\">\n          <Route\n            path=\"/dialogs\"\n            render={() => {\n              return (\n                <React.Suspense fallback={<h1>Loading profile...</h1>}>\n                  <DialogsContainer />\n                </React.Suspense>\n              );\n            }}\n          />\n          <Route path=\"/profile/:userId?\" render={() => <ProfileContainer />} />\n\n          <Route path=\"/users\" render={() => <UsersContainer />} />\n          <Route path=\"/news\" render={() => <News />} />\n          <Route path=\"/music\" render={() => <Music />} />\n          <Route path=\"/settings\" render={() => <Settings />} />\n          <Route path=\"/login\" render={() => <Login />} />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  initialized: state.app.initialized,\n});\n\nexport default compose(\n  withRouter(connect(mapStateToProps, { initializeApp })(App))\n);\n","import \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport store from \"./redux/redux-store\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\n\nimport { Provider } from \"react-redux\";\n\n// let rerenderEntireTree = () => {\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Provider store={store}>\n        <App\n        // state={state}\n        // dispatch={store.dispatch.bind(store)}\n        // store={store}\n        />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n// };\n// rerenderEntireTree();\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nserviceWorker.unregister();\n","export const requiredField = (value) => {\r\n  if (value) return undefined;\r\n  return \"Field is required\";\r\n};\r\n\r\n\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n  if (value && value.length > maxLength)\r\n    return `Max length is ${maxLength} symbols`;\r\n  return undefined;\r\n};\r\n","import React from \"react\";\r\nimport s from \"./FormsControl.module.css\";\r\n\r\nconst FormControl = ({ input, meta, child, ...props }) => {\r\n  const hasError = meta.touched && meta.error;\r\n  return (\r\n    <div className={s.formControl + \" \" + (hasError ? s.error : undefined)}>\r\n      <div>{props.children}</div>\r\n      {hasError && <span>{meta.error}</span>}\r\n      {/* {meta.touched && ((meta.error && <span>{\"some error\"}</span>))} */}\r\n    </div>\r\n  );\r\n};\r\n\r\n// export const Textarea = ({ input, meta, ...props }) => {\r\n//   const hasError = meta.touched && meta.error;\r\n//   return (\r\n//     <div className={s.formControl + \" \" + (hasError ? s.error : undefined)}>\r\n//       <div>\r\n//         <textarea {...input} {...props} />\r\n//       </div>\r\n//       {hasError && <span>{meta.error}</span>}\r\n//       {/* {meta.touched && ((meta.error && <span>{\"some error\"}</span>))} */}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export const Input = ({ input, meta, ...props }) => {\r\n//   const hasError = meta.touched && meta.error;\r\n//   return (\r\n//     <div className={s.formControl + \" \" + (hasError ? s.error : undefined)}>\r\n//       <div>\r\n//         <input {...input} {...props} />\r\n//       </div>\r\n//       {hasError && <span>{meta.error}</span>}\r\n//       {/* {meta.touched && ((meta.error && <span>{\"some error\"}</span>))} */}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\nexport const Textarea = (props) => {\r\n  const { input, meta, child, ...restProps } = props;\r\n  return (\r\n    <FormControl {...props}>\r\n      <textarea {...input} {...restProps} />\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport const Input = (props) => {\r\n  const { input, meta, child, ...restProps } = props;\r\n  return (\r\n    <FormControl {...props}>\r\n      <input {...input} {...restProps} />\r\n    </FormControl>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form-control\":\"FormsControl_form-control__1f9A1\",\"formControl\":\"FormsControl_formControl__2DITX\",\"error\":\"FormsControl_error__3Klxy\",\"formSummaryError\":\"FormsControl_formSummaryError__39HQF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Paginator_userPhoto__3aqLX\",\"selectedPage\":\"Paginator_selectedPage__2Ued6\",\"paginator\":\"Paginator_paginator__3iOcu\",\"pageNumber\":\"Paginator_pageNumber__a31fy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__tSMvR\",\"posts\":\"MyPosts_posts__2OPVR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3zMnx\",\"loginBlock\":\"Header_loginBlock__1Zn_l\"};","// const UPD_NEW_MESSAGE = \"UPDATE-NEW-POST-MESSAGE\";\r\nconst SEND_MESSAGE = \"SEND-NEW-POST-MESSAGE\";\r\n\r\nlet initialState = {\r\n  dialogs: [\r\n    { id: 1, name: \"Dima\" },\r\n    { id: 2, name: \"Andrey\" },\r\n    { id: 3, name: \"Sveta\" },\r\n    { id: 4, name: \"Roflan\" },\r\n    { id: 5, name: \"Max\" },\r\n  ],\r\n  messages: [\r\n    { id: 1, message: \"Hello! How are you?\" },\r\n    { id: 2, message: \"Hello! How are you?2\" },\r\n    { id: 3, message: \"Hello! How are you?3\" },\r\n    { id: 4, message: \"Hello! How are you?4\" },\r\n    { id: 5, message: \"Hello! How are you?5\" },\r\n  ],\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    // case UPD_NEW_MESSAGE:\r\n    //   return { ...state, newMessageBody: action.body };\r\n\r\n    case SEND_MESSAGE:\r\n      let body = action.newMessageBody;\r\n      return {\r\n        ...state,\r\n        newMessageBody: \"\",\r\n        messages: [...state.messages, { id: 6, message: body }],\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport const sendMessageCreator = (newMessageBody) => ({\r\n  type: SEND_MESSAGE,\r\n  newMessageBody,\r\n});\r\n\r\n// export const updNewMessageBodyCreator = (body) => {\r\n//   return {\r\n//     type: UPD_NEW_MESSAGE,\r\n//     body: body,\r\n//   };\r\n// };\r\n\r\nexport default dialogsReducer;\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n});\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) {\r\n        return <Redirect to={`/login`} />;\r\n      }\r\n      return <Component {...this.props} />;\r\n    }\r\n  }\r\n\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(\r\n    RedirectComponent\r\n  );\r\n  return ConnectedAuthRedirectComponent;\r\n};\r\n"],"sourceRoot":""}